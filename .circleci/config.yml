version: 2
jobs:
  build:
    parallelism: 4
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 4
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          RACK_ENV: test
          IN_CIRCLE: true
      - image: circleci/mysql:5.7
      - image: circleci/redis:4.0.11
    steps:
      - run:
        name: Install deps
        command: |
          sudo apt-get -qq update && sudo apt-get -qq install libssl-dev wget
      
      - checkout
      
      - run:
          name: Configuring settings
          command: cp .circleci/settings.yml config/settings.yml
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - rails-compliance-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-compliance-bundle-v2-
      - run: 'bundle check || bundle install'
      - save_cache:
          key: rails-compliance-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:3306 -timeout 1m      
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      
      - run: bundle exec rails db:create db:schema:load db:migrate --trace
      - run: mkdir -p $CIRCLE_TEST_REPORTS/rspec

      - run: mkdir -p /tmp/artifacts

      - run:
        name: Monitor memory usage
        command: while true; do ps -u $(whoami) --cols 80 eo rss,vsz,args --sort=-rss >> /tmp/artifacts/mem.txt; sleep 5; done
        background: true

      - run: bundle exec rspec --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml --format progress $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/artifacts
      - deploy:
          name: Trigger Build
          command:  chmod +x .circleci/trigger_build.sh && .circleci/trigger_build.sh
