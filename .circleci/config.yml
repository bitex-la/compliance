version: 2
jobs:
  build:
    working_directory: ~/home/compliance
    parallelism: 4
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: bitexla/compliance_web
        environment:
          RAILS_ENV: test
          SELENIUM_HEADLESS: true
      - image: mysql/mysql-server:5.7
        environment:
          - MYSQL_ROOT_PASSWORD=example
          - MYSQL_ROOT_HOST=%
      - image: circleci/redis:4.0.11
    steps:
      - checkout
      - run:
          name: Configuring settings
          command: cp .circleci/settings.yml config/settings.yml
      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          name: Install heif
          command: |
            sudo apt-get install software-properties-common -y
            sudo add-apt-repository ppa:strukturag/libde265 -y
            sudo apt-get update
            sudo apt-get install libde265 -y
            sudo apt-get install libtool -y
            git clone https://github.com/strukturag/libheif 
            apt-get install automake -y
            cd libheif
            ./autogen.sh
            ./configure
            make
            sudo make install
      - restore_cache:
          keys:
            - rails-compliance-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-compliance-bundle-v2-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: 'bundle check || bundle install'
      - save_cache:
          key: rails-compliance-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run: bundle exec rails db:create db:schema:load db:migrate
      - run: mkdir -p $CIRCLE_TEST_REPORTS/rspec
      - run: bundle exec rspec --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml --format progress $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
      - deploy:
          name: Trigger Build
          command:  chmod +x .circleci/trigger_build.sh && .circleci/trigger_build.sh
