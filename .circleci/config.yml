version: 2.1

orbs:
  ruby: circleci/ruby@1.0 
  slack: circleci/slack@3.4.2

jobs:
  build:
    parallelism: 5
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 4
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          RACK_ENV: test
          IN_CIRCLE: true
      - image: circleci/mysql:5.7
      - image: circleci/redis:4.0.11
    steps:
      - checkout
      
      - run:
          name: Configuring settings
          command: cp .circleci/settings.yml config/settings.yml
      - ruby/install-deps
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m      
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      
      - run: bundle exec rails db:create db:schema:load db:migrate --trace

      - run: mkdir -p /tmp/artifacts

      - run:
          name: Monitor memory usage
          command: while true; do ps -u $(whoami) --cols 80 eo rss,vsz,args --sort=-rss >> /tmp/artifacts/mem.txt; sleep 5; done
          background: true

      - ruby/rspec-test

      - store_artifacts:
          path: /tmp/artifacts

      - slack/status:
          channel: devs-alerts
          fail_only: true

  notify:
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
    steps:
      - slack/status:
          channel: devs-alerts

  trigger_build:
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
    steps:
      - checkout
      - run:
          name: Trigger Build
          command:  chmod +x .circleci/trigger_build.sh && .circleci/trigger_build.sh

workflows:
  version: 2
  build:
    jobs:             
      - build
      - notify:
          requires:
            - build
      - trigger_build:
          requires:
            - build
  